@using core_strength_yoga_products_management.Controllers;
@model core_strength_yoga_products_management.Models.Product;
@{
    IEnumerable<SelectListItem> categories = ViewData["selectListItemsCategories"] as IEnumerable<SelectListItem>;
    IEnumerable<SelectListItem> types = ViewData["selectListItemsTypes"] as IEnumerable<SelectListItem>;

    
}
@using (Html.BeginForm("Update", "Product", FormMethod.Post))
{
    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new{@class = "form-control"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ProductCategory)
        @Html.DropDownListFor(m => m.ProductCategory.Id, categories, new{@class = "form-control"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ProductType)
        @Html.DropDownListFor(m => m.ProductType.Id, types, new{@class = "form-control"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Description)
        @Html.TextBoxFor(m => m.Description, new{@class = "form-control"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.FullPrice)
        @Html.TextBoxFor(m => m.FullPrice, new{@class = "form-control"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Image)
        @Html.TextBoxFor(m => m.Image.ImageName, new{@class = "form-control"})
    </div>

    <div>

    <button type="submit" , class="btn btn-primary">Update <i class="fa-regular fa-floppy-disk"></i></button>
    </div>
}
@foreach (var attr in Model.ProductAttributes)
{
    var genderItems = ProductController.BuildSelectItemsGender((int)attr.Gender);
    var sizeItems = ProductController.BuildSelectItemsSize((int)attr.Size);
    var colourItems = ProductController.BuildSelectItemsColour((int)attr.Colour);
    <div class="m-5">
    @using (Html.BeginForm("UpdateProductAttribute", "Product", FormMethod.Post))
    {
        @Html.Hidden("ProductId", Model.Id)
        @Html.Hidden("Id", attr.Id)
        <div class="form-group">
            @Html.Label("Gender")
            @Html.DropDownList("Gender", genderItems, new{@class = "form-control"})
        </div>
        <div class="form-group">
            @Html.Label("Size")
            @Html.DropDownList("Size", sizeItems, new{@class = "form-control"})
        </div>
        <div class="form-group">
            @Html.Label("Colour")
            @Html.DropDownList("Colour", colourItems, new{@class = "form-control"})
        </div>
        <div class="form-group">
            @Html.Label("StockLevel")
            @Html.TextBox("StockLevel", attr.StockLevel, new { type = "number", min = "0", step = "1.0"})
        </div>
        <div class="form-group">
            @Html.Label("PriceAdjustment")
            @Html.TextBox("PriceAdjustment", attr.PriceAdjustment, new { type = "number", min = "0", step = "0.01"})
        </div>

        <button type="submit" , class="btn btn-primary">Update <i class="fa-regular fa-floppy-disk"></i></button>




    }
    </div>
}


<script>
    var NamePlaceholder = "@Model.Name";

    document.getElementById("nameInput").placeholder = NamePlaceholder;

</script>
